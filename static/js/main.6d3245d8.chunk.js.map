{"version":3,"sources":["Header.js","MemeGenerator.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","src","MemeGenerator","state","topText","bottomText","randomImage","allMemeImgs","handleChange","bind","handleSubmit","fetch","then","res","json","memes","data","console","log","setState","event","target","name","value","this","preventDefault","ranNum","Math","floor","random","length","link","url","onSubmit","type","placeholder","onChange","React","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qNAaeA,MAXf,WACE,OACC,yBAAQC,UAAU,OAAlB,UACA,qBACAC,IAAI,mEACJ,mD,0CCkEYC,EAvEf,kDACC,aAAc,IAAD,8BACZ,gBACKC,MAAO,CACXC,QAAS,GACTC,WAAY,GACZC,YAAa,gCACbC,YAAa,IAEb,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,aAAc,EAAKA,aAAaD,KAAlB,gBATR,EADd,qDAaC,WAAoB,IAAD,OAElBE,MADY,qCAEXC,MAAK,SAAAC,GAAG,OAAGA,EAAIC,UACfF,MAAK,SAAAC,GAAQ,IACNE,EAASF,EAAIG,KAAbD,MACPE,QAAQC,IAAIL,EAAIG,KAAKD,MAAM,IAC3B,EAAKI,SAAS,CAACZ,YAAaQ,SApB/B,0BAwBC,SAAaK,GAAO,IAAD,EACIA,EAAMC,OAArBC,EADW,EACXA,KAAMC,EADK,EACLA,MACbC,KAAKL,SAAL,eAAiBG,EAAOC,MA1B1B,0BA6BC,SAAaH,GACZA,EAAMK,iBACN,IAAMC,EAASC,KAAKC,MAAMD,KAAKE,UAAUL,KAAKrB,MAAMI,YAAYuB,OAAO,IAAI,EACrEC,EAAOP,KAAKrB,MAAMI,YAAYmB,GAAQM,IAC5Cf,QAAQC,IAAIa,GACZP,KAAKL,SAAS,CACbb,YAAayB,MAnChB,oBAwCC,WACC,OACC,gCACC,uBAAM/B,UAAU,YAAYiC,SAAUT,KAAKd,aAA3C,UACA,uBACCY,KAAK,UACLY,KAAK,OACLC,YAAY,WACZZ,MAAOC,KAAKrB,MAAMC,QAClBgC,SAAUZ,KAAKhB,eAEhB,uBACCc,KAAK,aACLY,KAAK,OACLC,YAAY,cACZZ,MAAOC,KAAKrB,MAAME,WAClB+B,SAAUZ,KAAKhB,eAEhB,iDAEA,uBACA,sBAAKR,UAAU,OAAf,UACC,qBAAKC,IAAKuB,KAAKrB,MAAMG,cACrB,oBAAIN,UAAU,MAAd,SAAqBwB,KAAKrB,MAAMC,UAChC,oBAAIJ,UAAU,SAAd,SAAwBwB,KAAKrB,MAAME,uBAhExC,GAAmCgC,IAAMC,WCY1BC,MATf,WACE,OACE,gCACA,cAAC,EAAD,IACA,cAAC,EAAD,QCGWC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB9B,MAAK,YAAkD,IAA/C+B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.6d3245d8.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction Header() {\r\n\t\treturn (\r\n\t\t\t<header className=\"head\">\r\n\t\t\t<img\r\n\t\t\tsrc=\"http://www.pngall.com/wp-content/uploads/2016/05/Trollface.png\" />\r\n\t\t\t<p>Meme Generator</p>\r\n\t\t\t</header>\r\n\t\t)\r\n\r\n}\r\n\r\nexport default Header","import React from 'react'\r\n\r\nexport class MemeGenerator extends React.Component {\r\n\tconstructor(){\r\n\t\tsuper()\r\n\t\tthis.state ={\r\n\t\t\ttopText: '',\r\n\t\t\tbottomText: '',\r\n\t\t\trandomImage: 'http://i.imgflip.com/1bij.jpg',\r\n\t\t\tallMemeImgs: []\r\n\t\t}\r\n\t\t this.handleChange = this.handleChange.bind(this);\r\n\t\t this.handleSubmit= this.handleSubmit.bind(this);\r\n\t}\r\n\r\n\tcomponentDidMount(){\r\n\t\tconst api = 'https://api.imgflip.com/get_memes';\r\n\t\tfetch(api)\r\n\t\t.then(res=> res.json())\r\n\t\t.then(res => {\r\n\t\t\tconst {memes} = res.data;\r\n\t\t\tconsole.log(res.data.memes[1])\r\n\t\t\tthis.setState({allMemeImgs: memes})\r\n\t\t\t});\r\n\t}\r\n\r\n\thandleChange(event){\r\n\t\tconst {name, value} = event.target;\r\n\t\tthis.setState({ [name]: value})\r\n\t}\r\n\r\n\thandleSubmit(event){\r\n\t\tevent.preventDefault();\r\n\t\tconst ranNum = Math.floor(Math.random()*(this.state.allMemeImgs.length-1))+0;\r\n\t\tconst link = this.state.allMemeImgs[ranNum].url;\r\n\t\tconsole.log(link);\r\n\t\tthis.setState({\r\n\t\t\trandomImage: link\r\n\t\t})\r\n\t}\r\n\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<form className='meme-form' onSubmit={this.handleSubmit}>\r\n\t\t\t\t<input \r\n\t\t\t\t\tname='topText'\r\n\t\t\t\t\ttype='text'\r\n\t\t\t\t\tplaceholder=\"Top Text\"\r\n\t\t\t\t\tvalue={this.state.topText}\r\n\t\t\t\t\tonChange={this.handleChange} />\r\n\r\n\t\t\t\t<input \r\n\t\t\t\t\tname='bottomText'\r\n\t\t\t\t\ttype='text'\r\n\t\t\t\t\tplaceholder=\"Bottom Text\"\r\n\t\t\t\t\tvalue={this.state.bottomText}\r\n\t\t\t\t\tonChange={this.handleChange}  />\r\n\r\n\t\t\t\t<button>Generate</button>\r\n\t\t\t\t</form>\r\n\t\t\t\t<hr />\r\n\t\t\t\t<div className=\"meme\">\r\n\t\t\t\t\t<img src={this.state.randomImage} />\r\n\t\t\t\t\t<h2 className='top'>{this.state.topText}</h2>\r\n\t\t\t\t\t<h2 className='bottom'>{this.state.bottomText}</h2>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default MemeGenerator","import React from 'react';\nimport './App.css';\nimport Header from './Header.js';\nimport MemeGenerator from './MemeGenerator.js';\n\nfunction App() {\n  return (\n    <div>\n    <Header />\n    <MemeGenerator />\n    </div>\n    )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}